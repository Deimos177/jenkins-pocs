pipeline {
  agent any
  stages {
    stage('Clone repo') {
      steps {
        checkout scmGit(
          branches: [[name: "*/${params.repoBranch}"]],
          extensions: [],
          userRemoteConfigs: [[credentialsId: 'git-credentials',
          url: "${params.repo}"]])
      }
    }
    stage('Junit tests coverage') {
      steps {
        junit healthScaleFactor: 0.1,
        allowEmptyResults: true,
        stdioRetention: '',
        testResults: '**/tests-report/*.xml'
      }
    }
    stage('Building image') {
      steps {
        script {
          echo 'Starting to build the docker image'
          pom = readMavenPom(file: './pom.xml')
          image = pom.artifactId
          echo "image to build: ${params.registry}/${image}:${env.BUILD_ID}"
          image = docker.build("${params.registry}/${image}:${env.BUILD_ID}")
          withCredentials([usernamePassword(credentialsId: 'registry-credentials', passwordVariable: 'registryPass', usernameVariable: 'registryUser')]) {
          sh "docker login -u ${env.registryUser} -p ${env.registryPass}"
          image.push()Password
          }
          docker.prune()
        }
      }
    }
  }
}